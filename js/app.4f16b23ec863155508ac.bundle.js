(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,n)=>{const s=n(89),a=n(863),o=new Array(20).fill(0).map(((e,t)=>({title:`Ch ${t+1}`}))),{lightningChart:i,AutoCursorModes:r,emptyLine:l,AxisTickStrategies:c,AxisScrollStrategies:h,UIOrigins:g,UIDraggingModes:d,emptyFill:m,Themes:u}=s,{createProgressiveFunctionGenerator:M}=a,f=document.getElementById("chart")||document.body,p=document.createElement("div");f.append(p),p.style.width="100%",p.style.height="1400px",p.style.display="flex",p.style.flexDirection="column";const x=i({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).ChartXY({container:p,theme:u[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle(`Multi-channel real-time monitoring (${o.length} chs, 1000 Hz)`).setAutoCursorMode(r.disabled).setMouseInteractions(!1),I=x.getDefaultAxisX().setTickStrategy(c.Time).setScrollStrategy(h.progressive).setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-1e4,stopAxisAfter:!1})));x.getDefaultAxisY().dispose();const w=o.map(((e,t)=>{const n=o.length-(t+1),s=x.addAxisY({iStack:n}).setTickStrategy(c.Empty).setTitle("Ch "+(o.length-t)).setTitleRotation(0).setMargins(n>0?3:0,n<o.length-1?3:0).setStrokeStyle(l);return{series:x.addPointLineAreaSeries({dataPattern:"ProgressiveX",automaticColorIndex:t,yAxis:s}).setMaxSampleCount(2e4).setAreaFillStyle(m).setStrokeStyle((e=>e.setThickness(-1))),axisY:s}}));I.setNibInteractionScaleByDragging(!1).setNibInteractionScaleByWheeling(!1).setAxisInteractionZoomByWheeling(!1);const y=(e,t)=>{const n=I.getInterval(),s=n.end-n.start,a=s+.1*Math.sign(t.deltaY)*Math.abs(s);I.setInterval({start:n.end-a,end:n.end,stopAxisAfter:!1}),t.preventDefault(),t.stopPropagation()};I.onAxisInteractionAreaMouseWheel(y),x.onSeriesBackgroundMouseWheel(y),w.forEach((e=>{e.series.onMouseWheel(y)})),x.addUIElement().setText("Reset").setPosition({x:0,y:0}).setOrigin(g.LeftBottom).setMargin({left:4,bottom:4}).setDraggingMode(d.notDraggable).onMouseClick((e=>{const t=w[0].series.getXMax();I.setInterval({start:t-1e4,end:t,stopAxisAfter:!1}),w.forEach((e=>e.axisY.fit()))}));const S=[{length:400*Math.PI,func:e=>Math.sin(e/200)},{length:400*Math.PI,func:e=>Math.cos(e/200)},{length:800*Math.PI,func:e=>Math.cos(e/400)+Math.sin(e/200)},{length:800*Math.PI,func:e=>Math.sin(e/100)+Math.cos(e/400)},{length:800*Math.PI,func:e=>Math.sin(e/200)*Math.cos(e/400)},{length:1800*Math.PI,func:e=>Math.cos(e/900)},{length:3200*Math.PI,func:e=>Math.sin(e/1600)},{length:2600*Math.PI,func:e=>Math.sin(e/400)*Math.cos(e/1300)}];Promise.all(S.map((e=>M().setStart(0).setEnd(e.length).setStep(1).setSamplingFunction(e.func).generate().toPromise().then((e=>e.map((e=>e.y))))))).then((e=>{let t=window.performance.now(),n=0;const s=()=>{const a=window.performance.now(),o=Math.floor(1e3*(a-t)/1e3),i=Math.min(o-n,1e3),r=[];for(let t=0;t<w.length;t++){const s=e[t%e.length],a=[];for(let e=0;e<i;e++){const t={x:1*(n+e),y:s[(n+e)%s.length]};a.push(t)}r[t]=a}w.forEach(((e,t)=>e.series.appendJSON(r[t]))),n+=i,requestAnimationFrame(s)};s()}));let A=window.performance.now(),P=0,k=0;const T=x.getTitle(),b=()=>{P++;const e=window.performance.now();k=1e3/((e-A)/P),requestAnimationFrame(b),x.setTitle(`${T} (FPS: ${k.toFixed(1)})`)};requestAnimationFrame(b),setInterval((()=>{A=window.performance.now(),P=0}),5e3)}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);